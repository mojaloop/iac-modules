---
apiVersion: tf.upbound.io/v1beta1
kind: Workspace
metadata:
  name: gitlab-postconfig-config
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  forProvider:
    # Use any module source supported by terraform init -from-module.
    source: Remote
    module: git::https://github.com/mojaloop/iac-modules.git//terraform/config-params/ccnew-config/gitlab-post-config?ref=${ARGOCD_ENV_terraform_modules_tag}
    vars:
      - key: gitlab_fqdn
        value: gitlab.${ARGOCD_ENV_gitlab_dns_subdomain}
      - key: kv_path
        value: ${ARGOCD_ENV_vault_kv_secret}
      - key: vault_fqdn
        value: vault.${ARGOCD_ENV_vault_dns_subdomain}

  # All Terraform outputs are written to the connection secret.
  providerConfigRef:
    name: gitlab-postconfig-config
  writeConnectionSecretToRef:
    namespace: ${ARGOCD_ENV_gitlab_namespace}
    name: ${ARGOCD_ENV_gitlab_post_config_output_secret}
---
apiVersion: tf.upbound.io/v1beta1
kind: ProviderConfig
metadata:
  name: gitlab-postconfig-config
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  # Note that unlike most provider configs this one supports an array of
  # credentials. This is because each Terraform workspace uses a single
  # Crossplane provider config, but could use multiple Terraform providers each
  # with their own credentials.
  credentials:
    - filename: terraform.tfvars.json
      source: Secret
      secretRef:
        namespace: ${ARGOCD_ENV_gitlab_namespace}
        name: root-token-secret
        key: token.json

    - filename: vault-keys.json
      source: Secret
      secretRef:
        namespace: ${ARGOCD_ENV_vault_namespace}
        name: ${ARGOCD_ENV_vault_keys_secret}
        key: vault-keys.json

  # This optional configuration block can be used to inject HCL into any
  # workspace that uses this provider config, for example to setup Terraform
  # providers.
  configuration: |
    terraform { 
        backend "kubernetes" {
          secret_suffix     = "providerconfig-gitlab-post-config"
          namespace         = "${ARGOCD_ENV_gitlab_namespace}"
          in_cluster_config = true
        }
        required_providers {
          gitlab = {
            source = "gitlabhq/gitlab"
            version = "~> 16.0"
          }
          vault = "${ARGOCD_ENV_vault_tf_provider_version}"
        }
     }

      variable "token" {
        type = string
      }    
      
      provider "vault" {
        address = "http://vault-active.${ARGOCD_ENV_vault_namespace}.svc.cluster.local:8200"
        token   = jsondecode(file("$${path.module}/vault-keys.json")).root_token 
      }

      provider "gitlab" {
        token = var.token
        base_url = "https://gitlab.${ARGOCD_ENV_gitlab_dns_subdomain}"
      }
