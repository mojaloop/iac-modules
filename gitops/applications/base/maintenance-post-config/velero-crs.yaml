# Standard Kubernetes API Version declaration. Required.
apiVersion: velero.io/v1
# Standard Kubernetes Kind declaration. Required.
kind: Backup
# Standard Kubernetes metadata. Required.
metadata:
  # Backup name. May be any valid Kubernetes object name. Required.
  name: base-cluster
  # Backup namespace. Must be the namespace of the Velero server. Required.
  namespace: velero
# Parameters about the backup. Required.
spec:
  # CSISnapshotTimeout specifies the time used to wait for
  # CSI VolumeSnapshot status turns to ReadyToUse during creation, before
  # returning error as timeout. The default value is 10 minute.
  csiSnapshotTimeout: 10m
  # ItemOperationTimeout specifies the time used to wait for
  # asynchronous BackupItemAction operations
  # The default value is 4 hour.
  itemOperationTimeout: 4h
  includedNamespaces:
    - "*"
  # Array of resources to include in the backup. Resources may be shortcuts (for example 'po' for 'pods')
  # or fully-qualified. If unspecified, all resources are included. Optional.
  includedResources:
    - "*"
  # Array of resources to exclude from the backup. Resources may be shortcuts (for example 'po' for 'pods')
  # or fully-qualified. Optional.
  excludedResources: []
  # Order of the resources to be collected during the backup process.  It's a map with key being the plural resource
  # name, and the value being a list of object names separated by comma.  Each resource name has format "namespace/objectname".
  # For cluster resources, simply use "objectname". Optional
  orderedResources: {}
  # Whether to include cluster-scoped resources. Valid values are true, false, and
  # null/unset. If true, all cluster-scoped resources are included (subject to included/excluded
  # resources and the label selector). If false, no cluster-scoped resources are included. If unset,
  # all cluster-scoped resources are included if and only if all namespaces are included and there are
  # no excluded namespaces. Otherwise, if there is at least one namespace specified in either
  # includedNamespaces or excludedNamespaces, then the only cluster-scoped resources that are backed
  # up are those associated with namespace-scoped resources included in the backup. For example, if a
  # PersistentVolumeClaim is included in the backup, its associated PersistentVolume (which is
  # cluster-scoped) would also be backed up.
  includeClusterResources: true
  # Array of cluster-scoped resources to exclude from the backup. Resources may be shortcuts
  # (for example 'sc' for 'storageclasses'), or fully-qualified. If unspecified,
  # no additional cluster-scoped resources are excluded. Optional.
  # Cannot work with include-resources, exclude-resources and include-cluster-resources.
  excludedClusterScopedResources: {}
  # Array of cluster-scoped resources to include from the backup. Resources may be shortcuts
  # (for example 'sc' for 'storageclasses'), or fully-qualified. If unspecified,
  # no additional cluster-scoped resources are included. Optional.
  # Cannot work with include-resources, exclude-resources and include-cluster-resources.
  includedClusterScopedResources: {}
  # Array of namespace-scoped resources to exclude from the backup. Resources may be shortcuts
  # (for example 'cm' for 'configmaps'), or fully-qualified. If unspecified,
  # no namespace-scoped resources are excluded. Optional.
  # Cannot work with include-resources, exclude-resources and include-cluster-resources.
  excludedNamespaceScopedResources: {}
  # Array of namespace-scoped resources to include from the backup. Resources may be shortcuts
  # (for example 'cm' for 'configmaps'), or fully-qualified. If unspecified,
  # all namespace-scoped resources are included. Optional.
  # Cannot work with include-resources, exclude-resources and include-cluster-resources.
  includedNamespaceScopedResources: {}
  # Individual objects must match this label selector to be included in the backup. Optional.
  labelSelector:
    {}
    # matchLabels:
    #   app: velero
    #   component: server
  # Individual object when matched with any of the label selector specified in the set are to be included in the backup. Optional.
  # orLabelSelectors as well as labelSelector cannot co-exist, only one of them can be specified in the backup request
  # Whether or not to snapshot volumes. Valid values are true, false, and null/unset. If unset, Velero performs snapshots as long as
  # a persistent volume provider is configured for Velero.
  snapshotVolumes: null
  # Where to store the tarball and logs.
  storageLocation: ${ARGOCD_ENV_storage_location}
  # The list of locations in which to store volume snapshots created for this backup.
  volumeSnapshotLocations: []
  # The amount of time before this backup is eligible for garbage collection. If not specified,
  # a default value of 30 days will be used. The default can be configured on the velero server
  # by passing the flag --default-backup-ttl.
  ttl: 24h0m0s
  # whether pod volume file system backup should be used for all volumes by default.
  defaultVolumesToFsBackup: true
  # Whether snapshot data should be moved. If set, data movement is launched after the snapshot is created.
  snapshotMoveData: true
  # The data mover to be used by the backup. If the value is "" or "velero", the built-in data mover will be used.
  datamover: velero
  # UploaderConfig specifies the configuration for the uploader
  uploaderConfig:
    # ParallelFilesUpload is the number of files parallel uploads to perform when using the uploader.
    parallelFilesUpload: 10
  # Actions to perform at different times during a backup. The only hook supported is
  # executing a command in a container in a pod using the pod exec API. Optional.
  hooks: {}
