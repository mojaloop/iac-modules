apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: wildcard-cert-internal
  namespace: ${ARGOCD_ENV_istio_namespace}
spec:
  secretName: ${ARGOCD_ENV_default_internal_ssl_certificate}
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
  commonName: ${ARGOCD_ENV_dns_private_subdomain}
  dnsNames:
    - "${ARGOCD_ENV_dns_private_subdomain}"
    - "*.${ARGOCD_ENV_dns_private_subdomain}"
  secretTemplate:
    annotations:
      reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
      reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: "${ARGOCD_ENV_istio_external_gateway_namespace}, ${ARGOCD_ENV_istio_internal_gateway_namespace}" # Control destination namespaces
      reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true" # Auto create reflection for matching namespaces
      reflector.v1.k8s.emberstack.com/reflection-auto-namespaces: "${ARGOCD_ENV_istio_external_gateway_namespace}, ${ARGOCD_ENV_istio_internal_gateway_namespace}" # Control auto-reflection namespaces
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: wildcard-cert-external
  namespace: ${ARGOCD_ENV_istio_namespace}
spec:
  secretName: ${ARGOCD_ENV_default_external_ssl_certificate}
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
  commonName: ${ARGOCD_ENV_dns_public_subdomain}
  dnsNames:
    - "${ARGOCD_ENV_dns_public_subdomain}"
    - "*.${ARGOCD_ENV_dns_public_subdomain}"
  secretTemplate:
    annotations:
      reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
      reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: "${ARGOCD_ENV_istio_external_gateway_namespace}, ${ARGOCD_ENV_istio_internal_gateway_namespace}" # Control destination namespaces
      reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true" # Auto create reflection for matching namespaces
      reflector.v1.k8s.emberstack.com/reflection-auto-namespaces: "${ARGOCD_ENV_istio_external_gateway_namespace}, ${ARGOCD_ENV_istio_internal_gateway_namespace}" # Control auto-reflection namespaces
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: proxy-protocol
  namespace: ${ARGOCD_ENV_istio_external_gateway_namespace}
spec:
  configPatches:
    - applyTo: LISTENER_FILTER
      patch:
        operation: INSERT_FIRST
        value:
          name: proxy_protocol
          typed_config:
            "@type": "type.googleapis.com/envoy.extensions.filters.listener.proxy_protocol.v3.ProxyProtocol"
  workloadSelector:
    labels:
      istio: ${ARGOCD_ENV_istio_external_gateway_name}
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: ${ARGOCD_ENV_istio_internal_wildcard_gateway_name}
  namespace: ${ARGOCD_ENV_istio_internal_gateway_namespace}
  annotations:
    external-dns.alpha.kubernetes.io/target: ${ARGOCD_ENV_internal_load_balancer_dns}
spec:
  selector:
    istio: ${ARGOCD_ENV_istio_internal_gateway_name}
  servers:
    - hosts:
        - "*.${ARGOCD_ENV_dns_private_subdomain}"
      port:
        name: https
        number: 443
        protocol: HTTPS
      tls:
        credentialName: ${ARGOCD_ENV_default_internal_ssl_certificate}
        mode: SIMPLE
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: ${ARGOCD_ENV_istio_external_wildcard_gateway_name}
  namespace: ${ARGOCD_ENV_istio_external_gateway_namespace}
  annotations:
    external-dns.alpha.kubernetes.io/target: ${ARGOCD_ENV_external_load_balancer_dns}
spec:
  selector:
    istio: ${ARGOCD_ENV_istio_external_gateway_name}
  servers:
    - hosts:
        - "*.${ARGOCD_ENV_dns_public_subdomain}"
      port:
        name: https
        number: 443
        protocol: HTTPS
      tls:
        credentialName: ${ARGOCD_ENV_default_external_ssl_certificate}
        mode: SIMPLE
