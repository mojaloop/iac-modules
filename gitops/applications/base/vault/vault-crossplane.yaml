---
apiVersion: vault.upbound.io/v1beta1
kind: ProviderConfig
metadata:
  name: vault-provider-config
spec:
  address: http://vault-active.${ARGOCD_ENV_vault_namespace}.svc.cluster.local:8200
  credentials:
    secretRef:
      key: creds
      name: ${ARGOCD_ENV_vault_keys_secret}
      namespace: ${ARGOCD_ENV_vault_namespace}
    source: Secret
  skip_child_token: true
---
apiVersion: tf.upbound.io/v1beta1
kind: ProviderConfig
metadata:
  name: vault-post-config
spec:
  # Note that unlike most provider configs this one supports an array of
  # credentials. This is because each Terraform workspace uses a single
  # Crossplane provider config, but could use multiple Terraform providers each
  # with their own credentials.
  credentials:
    - filename: terraform.tfvars.json
      source: Secret
      secretRef:
        namespace: ${ARGOCD_ENV_vault_namespace}
        name: ${ARGOCD_ENV_vault_keys_secret}
        key: vault-keys.json
  # This optional configuration block can be used to inject HCL into any
  # workspace that uses this provider config, for example to setup Terraform
  # providers.
  configuration: |
    terraform {
        backend "kubernetes" {
          secret_suffix     = "providerconfig-vault-post-config"
          namespace         = "${ARGOCD_ENV_vault_namespace}"
          in_cluster_config = true
        }
        required_providers {
          vault = "${ARGOCD_ENV_vault_tf_provider_version}"
        }
      }
      variable "root_token" {
        type = string
      }
      provider "vault" {
        address = "http://vault-active.${ARGOCD_ENV_vault_namespace}.svc.cluster.local:8200"
        token   = var.root_token
      }
---
apiVersion: tf.upbound.io/v1beta1
kind: Workspace
metadata:
  name: vault-post-config
  namespace: ${ARGOCD_ENV_vault_namespace}
spec:
  forProvider:
    # Use any module source supported by terraform init -from-module.
    source: Remote
    module: git::https://github.com/mojaloop/iac-modules.git//terraform/config-params/ccnew-config/vault-post-config?ref=${ARGOCD_ENV_vault_terraform_modules_tag}
    # Variables can be specified inline as a list of key-value pairs or as an json object, or loaded from a ConfigMap or Secret.
    vars:
      - key: "k8s_admin_role_name"
        value: "${ARGOCD_ENV_vault_k8s_admin_role_name}"
      - key: "k8s_admin_auth_path"
        value: "${ARGOCD_ENV_vault_k8s_admin_auth_path}"
      - key: "read_all_kv_secrets_policy_name"
        value: "${ARGOCD_ENV_vault_read_all_kv_secrets_policy_name}"
      - key: "kv_path"
        value: "${ARGOCD_ENV_vault_kv_secret}"

  # All Terraform outputs are written to the connection secret.
  providerConfigRef:
    name: vault-post-config
  writeConnectionSecretToRef:
    namespace: ${ARGOCD_ENV_vault_namespace}
    name: ${ARGOCD_ENV_tf_post_config_output_secret}
