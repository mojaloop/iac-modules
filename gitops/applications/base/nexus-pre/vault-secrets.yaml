apiVersion: redhatcop.redhat.io/v1alpha1
kind: PasswordPolicy
metadata:
  name: nexus-password-policy
  namespace: ${ARGOCD_ENV_vault_namespace}
spec:
  # Add fields here
  authentication:
    path: ${ARGOCD_ENV_vault_k8s_admin_auth_path}
    role: ${ARGOCD_ENV_vault_k8s_admin_role_name}
    serviceAccount:
      name: default
  passwordPolicy: |
    length = 20
      rule "charset" {
        charset = "abcdefghijklmnopqrstuvwxyz"
        min-chars = 1
      }
      rule "charset" {
        charset = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
        min-chars = 1
      }
      rule "charset" {
        charset = "0123456789"
        min-chars = 1
      }
      rule "charset" {
        charset = "_"
        min-chars = 1
      }
---
apiVersion: redhatcop.redhat.io/v1alpha1
kind: RandomSecret
metadata:
  name: nexus-password
  namespace: ${ARGOCD_ENV_vault_namespace} 
spec:
  authentication:
    path: ${ARGOCD_ENV_vault_k8s_admin_auth_path}
    role: ${ARGOCD_ENV_vault_k8s_admin_role_name}
    serviceAccount:
      name: default
  isKVSecretsEngineV2: true
  path: /secret/data/nexus
  secretKey: password
  secretFormat:
    passwordPolicyName: nexus-password-policy
---
apiVersion: redhatcop.redhat.io/v1alpha1
kind: VaultSecret
metadata:
  name: nexus-secret
  namespace: ${ARGOCD_ENV_vault_namespace}
spec:
  refreshPeriod: 1m0s
  vaultSecretDefinitions:
    - authentication:
        path: ${ARGOCD_ENV_vault_k8s_admin_auth_path}
        role: ${ARGOCD_ENV_vault_k8s_admin_role_name}
        serviceAccount:
          name: default
      name: dynamicsecret_nexus_password
      path: /secret/data/nexus/nexus-password
  output:
    name: nexus-secret
    stringData:
      nexus-password: '{{ .dynamicsecret_nexus_password.password }}'
    type: Opaque
    annotations:
      reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
      reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: "${ARGOCD_ENV_nexus_namespace}"
      reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true" # Auto create reflection for matching namespaces
      reflector.v1.k8s.emberstack.com/reflection-auto-namespaces: "${ARGOCD_ENV_nexus_namespace}"
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: nexus-ansible-secret-vars
  namespace: ${ARGOCD_ENV_vault_namespace}
spec:
  refreshInterval: 1m

  secretStoreRef:
    kind: ClusterSecretStore
    name: vault-secret-store

  target:
    name: nexus-ansible-secret-vars
    creationPolicy: Owner
    template:
      type: Opaque
      engineVersion: v2
      data:
        inventory: |
          all:
            hosts:
             localhost:
               ansible_host: 127.0.0.1
            vars:
              admin_password: {{ .admin_password  | toString }}
              nexus_server: nexus.nexus.svc.cluster.local:8081
      metadata:
        annotations:
          reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
          reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: "${ARGOCD_ENV_nexus_namespace}"
          reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true" # Auto create reflection for matching namespaces
          reflector.v1.k8s.emberstack.com/reflection-auto-namespaces: "${ARGOCD_ENV_nexus_namespace}"          

  data:
    - secretKey: admin_password
      remoteRef: 
        key: nexus/nexus-password
        property: password