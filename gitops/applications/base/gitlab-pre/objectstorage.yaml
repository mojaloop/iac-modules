---
apiVersion: objectstore.mojaloop.io/v1alpha1
kind: ObjectStore
metadata:
  name: "git-lfs-${ARGOCD_ENV_cluster_name}"
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  parameters:
    clusterName: ${ARGOCD_ENV_cluster_name}
    objectStoreProvider: ${ARGOCD_ENV_object_storage_provider}
    bucketName: "git.lfs.${ARGOCD_ENV_cluster_name}.${ARGOCD_ENV_gitlab_dns_subdomain}"
    ccK8sProviderName: "kubernetes-provider"
    namespace: ${ARGOCD_ENV_gitlab_namespace}
    s3:
      awsProviderName: "aws-cp-upbound-provider-config"
      bucketRegion: ${ARGOCD_ENV_cloud_region}
      forceDestroy: true
      deletionPolicy: "Delete"
    ceph:
      scK8sProviderName: ${ARGOCD_ENV_sc_provider_config_name}
      storageClassName: "ceph-bucket"
      maxSize: "${ARGOCD_ENV_git_lfs_storage_size}"
---
apiVersion: objectstore.mojaloop.io/v1alpha1
kind: ObjectStore
metadata:
  name: "gitlab-artifacts-${ARGOCD_ENV_cluster_name}"
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  parameters:
    clusterName: ${ARGOCD_ENV_cluster_name}
    objectStoreProvider: ${ARGOCD_ENV_object_storage_provider}
    bucketName: "gitlab.artifacts.${ARGOCD_ENV_cluster_name}.${ARGOCD_ENV_gitlab_dns_subdomain}"
    ccK8sProviderName: "kubernetes-provider"
    namespace: ${ARGOCD_ENV_gitlab_namespace}
    s3:
      awsProviderName: "aws-cp-upbound-provider-config"
      bucketRegion: ${ARGOCD_ENV_cloud_region}
      forceDestroy: true
      deletionPolicy: "Delete"
    ceph:
      scK8sProviderName: ${ARGOCD_ENV_sc_provider_config_name}
      storageClassName: "ceph-bucket"
      maxSize: "${ARGOCD_ENV_gitlab_artifacts_storage_size}"
---
apiVersion: objectstore.mojaloop.io/v1alpha1
kind: ObjectStore
metadata:
  name: "gitlab-uploads-${ARGOCD_ENV_cluster_name}"
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  parameters:
    clusterName: ${ARGOCD_ENV_cluster_name}
    objectStoreProvider: ${ARGOCD_ENV_object_storage_provider}
    bucketName: "gitlab.uploads.${ARGOCD_ENV_cluster_name}.${ARGOCD_ENV_gitlab_dns_subdomain}"
    ccK8sProviderName: "kubernetes-provider"
    namespace: ${ARGOCD_ENV_gitlab_namespace}
    s3:
      awsProviderName: "aws-cp-upbound-provider-config"
      bucketRegion: ${ARGOCD_ENV_cloud_region}
      forceDestroy: true
      deletionPolicy: "Delete"
    ceph:
      scK8sProviderName: ${ARGOCD_ENV_sc_provider_config_name}
      storageClassName: "ceph-bucket"
      maxSize: "${ARGOCD_ENV_gitlab_uploads_storage_size}"
---
apiVersion: objectstore.mojaloop.io/v1alpha1
kind: ObjectStore
metadata:
  name: "gitlab-packages-${ARGOCD_ENV_cluster_name}"
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  parameters:
    clusterName: ${ARGOCD_ENV_cluster_name}
    objectStoreProvider: ${ARGOCD_ENV_object_storage_provider}
    bucketName: "gitlab.packages.${ARGOCD_ENV_cluster_name}.${ARGOCD_ENV_gitlab_dns_subdomain}"
    ccK8sProviderName: "kubernetes-provider"
    namespace: ${ARGOCD_ENV_gitlab_namespace}
    s3:
      awsProviderName: "aws-cp-upbound-provider-config"
      bucketRegion: ${ARGOCD_ENV_cloud_region}
      forceDestroy: true
      deletionPolicy: "Delete"
    ceph:
      scK8sProviderName: ${ARGOCD_ENV_sc_provider_config_name}
      storageClassName: "ceph-bucket"
      maxSize: "${ARGOCD_ENV_gitlab_packages_storage_size}"
---
apiVersion: objectstore.mojaloop.io/v1alpha1
kind: ObjectStore
metadata:
  name: "registry-${ARGOCD_ENV_cluster_name}"
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  parameters:
    clusterName: ${ARGOCD_ENV_cluster_name}
    objectStoreProvider: ${ARGOCD_ENV_object_storage_provider}
    bucketName: "registry.${ARGOCD_ENV_cluster_name}.${ARGOCD_ENV_gitlab_dns_subdomain}"
    ccK8sProviderName: "kubernetes-provider"
    namespace: ${ARGOCD_ENV_gitlab_namespace}
    s3:
      awsProviderName: "aws-cp-upbound-provider-config"
      bucketRegion: ${ARGOCD_ENV_cloud_region}
      forceDestroy: true
      deletionPolicy: "Delete"
    ceph:
      scK8sProviderName: ${ARGOCD_ENV_sc_provider_config_name}
      storageClassName: "ceph-bucket"
      maxSize: "${ARGOCD_ENV_gitlab_registry_storage_size}"
---
apiVersion: objectstore.mojaloop.io/v1alpha1
kind: ObjectStore
metadata:
  name: "gitlab-mr-diffs-${ARGOCD_ENV_cluster_name}"
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  parameters:
    clusterName: ${ARGOCD_ENV_cluster_name}
    objectStoreProvider: ${ARGOCD_ENV_object_storage_provider}
    bucketName: "gitlab.mr.diffs.${ARGOCD_ENV_cluster_name}.${ARGOCD_ENV_gitlab_dns_subdomain}"
    ccK8sProviderName: "kubernetes-provider"
    namespace: ${ARGOCD_ENV_gitlab_namespace}
    s3:
      awsProviderName: "aws-cp-upbound-provider-config"
      bucketRegion: ${ARGOCD_ENV_cloud_region}
      forceDestroy: true
      deletionPolicy: "Delete"
    ceph:
      scK8sProviderName: ${ARGOCD_ENV_sc_provider_config_name}
      storageClassName: "ceph-bucket"
      maxSize: "${ARGOCD_ENV_gitlab_mrdiffs_storage_size}"
---
apiVersion: objectstore.mojaloop.io/v1alpha1
kind: ObjectStore
metadata:
  name: "gitlab-ci-secure-files-${ARGOCD_ENV_cluster_name}"
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  parameters:
    clusterName: ${ARGOCD_ENV_cluster_name}
    objectStoreProvider: ${ARGOCD_ENV_object_storage_provider}
    bucketName: "gitlab.ci.secure.files.${ARGOCD_ENV_cluster_name}.${ARGOCD_ENV_gitlab_dns_subdomain}"
    ccK8sProviderName: "kubernetes-provider"
    namespace: ${ARGOCD_ENV_gitlab_namespace}
    s3:
      awsProviderName: "aws-cp-upbound-provider-config"
      bucketRegion: ${ARGOCD_ENV_cloud_region}
      forceDestroy: true
      deletionPolicy: "Delete"
    ceph:
      scK8sProviderName: ${ARGOCD_ENV_sc_provider_config_name}
      storageClassName: "ceph-bucket"
      maxSize: "${ARGOCD_ENV_gitlab_cisecurefiles_storage_size}"
---
apiVersion: objectstore.mojaloop.io/v1alpha1
kind: ObjectStore
metadata:
  name: "gitlab-terraform-state-${ARGOCD_ENV_cluster_name}"
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  parameters:
    clusterName: ${ARGOCD_ENV_cluster_name}
    objectStoreProvider: ${ARGOCD_ENV_object_storage_provider}
    bucketName: "gitlab.terraform.state.${ARGOCD_ENV_cluster_name}.${ARGOCD_ENV_gitlab_dns_subdomain}"
    ccK8sProviderName: "kubernetes-provider"
    namespace: ${ARGOCD_ENV_gitlab_namespace}
    s3:
      awsProviderName: "aws-cp-upbound-provider-config"
      bucketRegion: ${ARGOCD_ENV_cloud_region}
      forceDestroy: true
      deletionPolicy: "Delete"
    ceph:
      scK8sProviderName: ${ARGOCD_ENV_sc_provider_config_name}
      storageClassName: "ceph-bucket"
      maxSize: "${ARGOCD_ENV_gitlab_tfstate_storage_size}"
---
apiVersion: objectstore.mojaloop.io/v1alpha1
kind: ObjectStore
metadata:
  name: "gitlab-dependency-proxy-${ARGOCD_ENV_cluster_name}"
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  parameters:
    clusterName: ${ARGOCD_ENV_cluster_name}
    objectStoreProvider: ${ARGOCD_ENV_object_storage_provider}
    bucketName: "gitlab.dependency.proxy.${ARGOCD_ENV_cluster_name}.${ARGOCD_ENV_gitlab_dns_subdomain}"
    ccK8sProviderName: "kubernetes-provider"
    namespace: ${ARGOCD_ENV_gitlab_namespace}
    s3:
      awsProviderName: "aws-cp-upbound-provider-config"
      bucketRegion: ${ARGOCD_ENV_cloud_region}
      forceDestroy: true
      deletionPolicy: "Delete"
    ceph:
      scK8sProviderName: ${ARGOCD_ENV_sc_provider_config_name}
      storageClassName: "ceph-bucket"
      maxSize: "${ARGOCD_ENV_gitlab_dep_proxy_storage_size}"
---
apiVersion: objectstore.mojaloop.io/v1alpha1
kind: ObjectStore
metadata:
  name: "gitlab-runner-cache-${ARGOCD_ENV_cluster_name}"
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  parameters:
    clusterName: ${ARGOCD_ENV_cluster_name}
    objectStoreProvider: ${ARGOCD_ENV_object_storage_provider}
    bucketName: "gitlab.runner.cache.${ARGOCD_ENV_cluster_name}.${ARGOCD_ENV_gitlab_dns_subdomain}"
    ccK8sProviderName: "kubernetes-provider"
    namespace: ${ARGOCD_ENV_gitlab_namespace}
    s3:
      awsProviderName: "aws-cp-upbound-provider-config"
      bucketRegion: ${ARGOCD_ENV_cloud_region}
      forceDestroy: true
      deletionPolicy: "Delete"
    ceph:
      scK8sProviderName: ${ARGOCD_ENV_sc_provider_config_name}
      storageClassName: "ceph-bucket"
      maxSize: "${ARGOCD_ENV_gitlab_runner_cache_storage_size}"
---
apiVersion: objectstore.mojaloop.io/v1alpha1
kind: ObjectStore
metadata:
  name: "gitlab-backups-${ARGOCD_ENV_cluster_name}"
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  parameters:
    clusterName: ${ARGOCD_ENV_cluster_name}
    objectStoreProvider: ${ARGOCD_ENV_object_storage_provider}
    bucketName: "gitlab.backups.${ARGOCD_ENV_cluster_name}.${ARGOCD_ENV_gitlab_dns_subdomain}"
    ccK8sProviderName: "kubernetes-provider"
    namespace: ${ARGOCD_ENV_gitlab_namespace}
    s3:
      awsProviderName: "aws-cp-upbound-provider-config"
      bucketRegion: ${ARGOCD_ENV_cloud_region}
      forceDestroy: true
      deletionPolicy: "Delete"
    ceph:
      scK8sProviderName: ${ARGOCD_ENV_sc_provider_config_name}
      storageClassName: "ceph-bucket"
      maxSize: "${ARGOCD_ENV_gitlab_runner_cache_storage_size}"
---
apiVersion: objectstore.mojaloop.io/v1alpha1
kind: ObjectStore
metadata:
  name: "gitlab-backups-tmp-${ARGOCD_ENV_cluster_name}"
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  parameters:
    clusterName: ${ARGOCD_ENV_cluster_name}
    objectStoreProvider: ${ARGOCD_ENV_object_storage_provider}
    bucketName: "gitlab.backups.tmp.${ARGOCD_ENV_cluster_name}.${ARGOCD_ENV_gitlab_dns_subdomain}"
    ccK8sProviderName: "kubernetes-provider"
    namespace: ${ARGOCD_ENV_gitlab_namespace}
    s3:
      awsProviderName: "aws-cp-upbound-provider-config"
      bucketRegion: ${ARGOCD_ENV_cloud_region}
      forceDestroy: true
      deletionPolicy: "Delete"
    ceph:
      scK8sProviderName: ${ARGOCD_ENV_sc_provider_config_name}
      storageClassName: "ceph-bucket"
      maxSize: "${ARGOCD_ENV_gitlab_runner_cache_storage_size}"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitlab-secret-creator
  namespace: ${ARGOCD_ENV_gitlab_namespace}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: ${ARGOCD_ENV_gitlab_namespace}
  name: gitlab-secret-role
rules:
  - apiGroups: [""]
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - authorization.k8s.io
    resources:
      - selfsubjectrulesreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gitlab-secret-creator
  namespace: ${ARGOCD_ENV_gitlab_namespace}
subjects:
  - kind: ServiceAccount
    name: gitlab-secret-creator
roleRef:
  kind: Role
  name: gitlab-secret-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: gitlab-k8s-secret-store
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  provider:
    kubernetes:
      auth:
        serviceAccount:
          name: "gitlab-secret-creator"
      remoteNamespace: ${ARGOCD_ENV_gitlab_namespace}
      server:
        caProvider:
          type: ConfigMap
          name: kube-root-ca.crt
          key: ca.crt
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-rails-secret-lfs
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  refreshInterval: 1m

  secretStoreRef:
    kind: SecretStore
    name: gitlab-k8s-secret-store

  data:
    - secretKey: username
      remoteRef:
        key: "git-lfs-${ARGOCD_ENV_cluster_name}"
        property: username
    - secretKey: password
      remoteRef:
        key: "git-lfs-${ARGOCD_ENV_cluster_name}"
        property: password

  target:
    name: gitlab-rails-secret-lfs
    creationPolicy: Owner
    template:
      data:
        connection: |
          provider: AWS
          # Specify the region
          region: ${ARGOCD_ENV_cloud_region}
          # Specify access/secret keys
          aws_access_key_id: {{.username}}
          aws_secret_access_key: {{.password}}
          # The below settings are for S3 compatible endpoints
          #   See https://docs.gitlab.com/ee/administration/job_artifacts.html#s3-compatible-connection-settings
          aws_signature_version: 4
          host: ${ARGOCD_ENV_object_storage_host}
          endpoint:  "${ARGOCD_ENV_object_storage_regional_endpoint}"
          path_style: ${ARGOCD_ENV_object_storage_path_style}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-rails-secret-artifacts
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  refreshInterval: 1m

  secretStoreRef:
    kind: SecretStore
    name: gitlab-k8s-secret-store

  data:
    - secretKey: username
      remoteRef:
        key: gitlab-artifacts-${ARGOCD_ENV_cluster_name}
        property: username
    - secretKey: password
      remoteRef:
        key: gitlab-artifacts-${ARGOCD_ENV_cluster_name}
        property: password

  target:
    name: gitlab-rails-secret-artifacts
    creationPolicy: Owner
    template:
      data:
        connection: |
          provider: AWS
          # Specify the region
          region: ${ARGOCD_ENV_cloud_region}
          # Specify access/secret keys
          aws_access_key_id: {{.username}}
          aws_secret_access_key: {{.password}}
          # The below settings are for S3 compatible endpoints
          #   See https://docs.gitlab.com/ee/administration/job_artifacts.html#s3-compatible-connection-settings
          aws_signature_version: 4
          host: ${ARGOCD_ENV_object_storage_host}
          endpoint:  "${ARGOCD_ENV_object_storage_regional_endpoint}"
          path_style: ${ARGOCD_ENV_object_storage_path_style}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-rails-secret-uploads
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  refreshInterval: 1m

  secretStoreRef:
    kind: SecretStore
    name: gitlab-k8s-secret-store

  data:
    - secretKey: username
      remoteRef:
        key: gitlab-uploads-${ARGOCD_ENV_cluster_name}
        property: username
    - secretKey: password
      remoteRef:
        key: gitlab-uploads-${ARGOCD_ENV_cluster_name}
        property: password

  target:
    name: gitlab-rails-secret-uploads
    creationPolicy: Owner
    template:
      data:
        connection: |
          provider: AWS
          # Specify the region
          region: ${ARGOCD_ENV_cloud_region}
          # Specify access/secret keys
          aws_access_key_id: {{.username}}
          aws_secret_access_key: {{.password}}
          # The below settings are for S3 compatible endpoints
          #   See https://docs.gitlab.com/ee/administration/job_artifacts.html#s3-compatible-connection-settings
          aws_signature_version: 4
          host: ${ARGOCD_ENV_object_storage_host}
          endpoint:  "${ARGOCD_ENV_object_storage_regional_endpoint}"
          path_style: ${ARGOCD_ENV_object_storage_path_style}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-rails-secret-packages
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  refreshInterval: 1m

  secretStoreRef:
    kind: SecretStore
    name: gitlab-k8s-secret-store

  data:
    - secretKey: username
      remoteRef:
        key: gitlab-packages-${ARGOCD_ENV_cluster_name}
        property: username
    - secretKey: password
      remoteRef:
        key: gitlab-packages-${ARGOCD_ENV_cluster_name}
        property: password

  target:
    name: gitlab-rails-secret-packages
    creationPolicy: Owner
    template:
      data:
        connection: |
          provider: AWS
          # Specify the region
          region: ${ARGOCD_ENV_cloud_region}
          # Specify access/secret keys
          aws_access_key_id: {{.username}}
          aws_secret_access_key: {{.password}}
          # The below settings are for S3 compatible endpoints
          #   See https://docs.gitlab.com/ee/administration/job_artifacts.html#s3-compatible-connection-settings
          aws_signature_version: 4
          host: ${ARGOCD_ENV_object_storage_host}
          endpoint:  "${ARGOCD_ENV_object_storage_regional_endpoint}"
          path_style: ${ARGOCD_ENV_object_storage_path_style}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-rails-secret-mr-diffs
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  refreshInterval: 1m

  secretStoreRef:
    kind: SecretStore
    name: gitlab-k8s-secret-store

  data:
    - secretKey: username
      remoteRef:
        key: gitlab-mr-diffs-${ARGOCD_ENV_cluster_name}
        property: username
    - secretKey: password
      remoteRef:
        key: gitlab-mr-diffs-${ARGOCD_ENV_cluster_name}
        property: password

  target:
    name: gitlab-rails-secret-mr-diffs
    creationPolicy: Owner
    template:
      data:
        connection: |
          provider: AWS
          # Specify the region
          region: ${ARGOCD_ENV_cloud_region}
          # Specify access/secret keys
          aws_access_key_id: {{.username}}
          aws_secret_access_key: {{.password}}
          # The below settings are for S3 compatible endpoints
          #   See https://docs.gitlab.com/ee/administration/job_artifacts.html#s3-compatible-connection-settings
          aws_signature_version: 4
          host: ${ARGOCD_ENV_object_storage_host}
          endpoint:  "${ARGOCD_ENV_object_storage_regional_endpoint}"
          path_style: ${ARGOCD_ENV_object_storage_path_style}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-rails-secret-ci-secure-files
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  refreshInterval: 1m

  secretStoreRef:
    kind: SecretStore
    name: gitlab-k8s-secret-store

  data:
    - secretKey: username
      remoteRef:
        key: gitlab-ci-secure-files-${ARGOCD_ENV_cluster_name}
        property: username
    - secretKey: password
      remoteRef:
        key: gitlab-ci-secure-files-${ARGOCD_ENV_cluster_name}
        property: password

  target:
    name: gitlab-rails-secret-ci-secure-files
    creationPolicy: Owner
    template:
      data:
        connection: |
          provider: AWS
          # Specify the region
          region: ${ARGOCD_ENV_cloud_region}
          # Specify access/secret keys
          aws_access_key_id: {{.username}}
          aws_secret_access_key: {{.password}}
          # The below settings are for S3 compatible endpoints
          #   See https://docs.gitlab.com/ee/administration/job_artifacts.html#s3-compatible-connection-settings
          aws_signature_version: 4
          host: ${ARGOCD_ENV_object_storage_host}
          endpoint:  "${ARGOCD_ENV_object_storage_regional_endpoint}"
          path_style: ${ARGOCD_ENV_object_storage_path_style}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-rails-secret-terraform-state
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  refreshInterval: 1m

  secretStoreRef:
    kind: SecretStore
    name: gitlab-k8s-secret-store

  data:
    - secretKey: username
      remoteRef:
        key: gitlab-terraform-state-${ARGOCD_ENV_cluster_name}
        property: username
    - secretKey: password
      remoteRef:
        key: gitlab-terraform-state-${ARGOCD_ENV_cluster_name}
        property: password

  target:
    name: gitlab-rails-secret-terraform-state
    creationPolicy: Owner
    template:
      data:
        connection: |
          provider: AWS
          # Specify the region
          region: ${ARGOCD_ENV_cloud_region}
          # Specify access/secret keys
          aws_access_key_id: {{.username}}
          aws_secret_access_key: {{.password}}
          # The below settings are for S3 compatible endpoints
          #   See https://docs.gitlab.com/ee/administration/job_artifacts.html#s3-compatible-connection-settings
          aws_signature_version: 4
          host: ${ARGOCD_ENV_object_storage_host}
          endpoint:  "${ARGOCD_ENV_object_storage_regional_endpoint}"
          path_style: ${ARGOCD_ENV_object_storage_path_style}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-rails-secret-dependency-proxy
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  refreshInterval: 1m

  secretStoreRef:
    kind: SecretStore
    name: gitlab-k8s-secret-store

  data:
    - secretKey: username
      remoteRef:
        key: gitlab-dependency-proxy-${ARGOCD_ENV_cluster_name}
        property: username
    - secretKey: password
      remoteRef:
        key: gitlab-dependency-proxy-${ARGOCD_ENV_cluster_name}
        property: password

  target:
    name: gitlab-rails-secret-dependency-proxy
    creationPolicy: Owner
    template:
      data:
        connection: |
          provider: AWS
          # Specify the region
          region: ${ARGOCD_ENV_cloud_region}
          # Specify access/secret keys
          aws_access_key_id: {{.username}}
          aws_secret_access_key: {{.password}}
          # The below settings are for S3 compatible endpoints
          #   See https://docs.gitlab.com/ee/administration/job_artifacts.html#s3-compatible-connection-settings
          aws_signature_version: 4
          host: ${ARGOCD_ENV_object_storage_host}
          endpoint:  "${ARGOCD_ENV_object_storage_regional_endpoint}"
          path_style: ${ARGOCD_ENV_object_storage_path_style}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-secret-registry
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  refreshInterval: 1m

  secretStoreRef:
    kind: SecretStore
    name: gitlab-k8s-secret-store

  data:
    - secretKey: username
      remoteRef:
        key: registry-${ARGOCD_ENV_cluster_name}
        property: username
    - secretKey: password
      remoteRef:
        key: registry-${ARGOCD_ENV_cluster_name}
        property: password

  target:
    name: gitlab-secret-registry
    creationPolicy: Owner
    template:
      data:
        connection: |
          s3:
           bucket: registry-${ARGOCD_ENV_cluster_name}
           v4auth: true
           pathstyle: ${ARGOCD_ENV_object_storage_path_style}
           region: ${ARGOCD_ENV_cloud_region}
           regionendpoint: "${ARGOCD_ENV_object_storage_regional_endpoint}"
           accesskey: {{.username}}
           secretkey: {{.password}}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-rails-secret-backups
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  refreshInterval: 1m

  secretStoreRef:
    kind: SecretStore
    name: gitlab-k8s-secret-store

  data:
    - secretKey: username
      remoteRef:
        key: gitlab-backups-${ARGOCD_ENV_cluster_name}
        property: username
    - secretKey: password
      remoteRef:
        key: gitlab-backups-${ARGOCD_ENV_cluster_name}
        property: password

  target:
    name: gitlab-rails-secret-backups
    creationPolicy: Owner
    template:
      data:
        connection: |
          provider: AWS
          # Specify the region
          region: ${ARGOCD_ENV_cloud_region}
          # Specify access/secret keys
          aws_access_key_id: {{.username}}
          aws_secret_access_key: {{.password}}
          # The below settings are for S3 compatible endpoints
          #   See https://docs.gitlab.com/ee/administration/job_artifacts.html#s3-compatible-connection-settings
          aws_signature_version: 4
          host: ${ARGOCD_ENV_object_storage_host}
          endpoint:  "${ARGOCD_ENV_object_storage_regional_endpoint}"
          path_style: ${ARGOCD_ENV_object_storage_path_style}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-rails-secret-backups-tmp
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  refreshInterval: 1m

  secretStoreRef:
    kind: SecretStore
    name: gitlab-k8s-secret-store

  data:
    - secretKey: username
      remoteRef:
        key: gitlab-backups-tmp-${ARGOCD_ENV_cluster_name}
        property: username
    - secretKey: password
      remoteRef:
        key: gitlab-backups-tmp-${ARGOCD_ENV_cluster_name}
        property: password

  target:
    name: gitlab-rails-secret-backups-tmp
    creationPolicy: Owner
    template:
      data:
        connection: |
          provider: AWS
          # Specify the region
          region: ${ARGOCD_ENV_cloud_region}
          # Specify access/secret keys
          aws_access_key_id: {{.username}}
          aws_secret_access_key: {{.password}}
          # The below settings are for S3 compatible endpoints
          #   See https://docs.gitlab.com/ee/administration/job_artifacts.html#s3-compatible-connection-settings
          aws_signature_version: 4
          host: ${ARGOCD_ENV_object_storage_host}
          endpoint:  "${ARGOCD_ENV_object_storage_regional_endpoint}"
          path_style: ${ARGOCD_ENV_object_storage_path_style}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-runner-cache-secret
  namespace: ${ARGOCD_ENV_gitlab_namespace}
spec:
  refreshInterval: 1m

  secretStoreRef:
    kind: SecretStore
    name: gitlab-k8s-secret-store

  data:
    - secretKey: username
      remoteRef:
        key: gitlab-runner-cache-${ARGOCD_ENV_cluster_name}
        property: username
    - secretKey: password
      remoteRef:
        key: gitlab-runner-cache-${ARGOCD_ENV_cluster_name}
        property: password

  target:
    name: gitlab-runner-cache-secret
    creationPolicy: Owner
    template:
      data:
        accesskey: "{{.username}}"
        secretkey: "{{.password}}"