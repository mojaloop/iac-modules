apiVersion: v1
kind: ServiceAccount
metadata:
  name: zitadel-ext-secrets
  namespace: ${ARGOCD_ENV_argocd_namespace}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: local-external-secrets-secret-admin
rules:
  - verbs:
      - get
      - create
      - list
      - watch
      - update
    apiGroups:
      - ""
    resources:
      - secrets
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: zitadel-ext-secrets
  namespace: ${ARGOCD_ENV_argocd_namespace}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: local-external-secrets-secret-admin
subjects:
  - kind: ServiceAccount
    name: zitadel-ext-secrets
    namespace: ${ARGOCD_ENV_argocd_namespace}
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: k8s-store-zitadel
  namespace: ${ARGOCD_ENV_argocd_namespace}
spec:
  provider:
    kubernetes:
      remoteNamespace: ${ARGOCD_ENV_zitadel_namespace}
      server:
        url:
        caProvider:
          type: ConfigMap
          name: kube-root-ca.crt
          key: ca.crt
      auth:
        serviceAccount:
          name: "zitadel-ext-secrets"
---

