# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: cloudwatch-exporter    # Name of the service account
#   namespace: ${ARGOCD_ENV_monitoring_namespace} # Namespace in which the service account will be created
#   annotations:
#     eks.amazonaws.com/role-arn: ${ARGOCD_ENV_cloudwatch_exporter_role_arn}
# ---

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: cloudwatch-exporter
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app.kubernetes.io/name: cloudwatch-exporter
#   template:
#     metadata:
#       labels:
#         app.kubernetes.io/name: cloudwatch-exporter
#     spec:
#       serviceAccountName: cloudwatch-exporter
#       containers:
#       - name: cloudwatch-exporter
#         image: ghcr.io/nerdswords/yet-another-cloudwatch-exporter:v0.61.2
#         args:
#         - -config.file=/exporter/cloudwatch-exporter-config.yaml
#         - -listen-address=:8080
#         ports:
#         - name: http
#           containerPort: 8080
#         resources:
#           requests:
#             memory: 64Mi
#             cpu: 100m
#           limits:
#             memory: 128Mi
#             cpu: 500m
#         volumeMounts:
#         - name: config-volume
#           mountPath: /exporter
#         - name: credentials-volume
#           mountPath: /exporter/.aws/
#       volumes:
#       - name: config-volume
#         configMap:
#           name: cloudwatch-exporter-config
#       - name: credentials-volume
#         secret:
#           secretName: cloudwatch-exporter-credentials
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: cloudwatch-exporter
#   labels:
#     app.kubernetes.io/name: cloudwatch-exporter
# spec:
#   selector:
#     app.kubernetes.io/name: cloudwatch-exporter
#   ports:
#   - name: http
#     protocol: TCP
#     port: 8080
#     targetPort: http
#   type: ClusterIP
# ---
# apiVersion: monitoring.coreos.com/v1
# kind: ServiceMonitor
# metadata:
#   name: cloudwatch-exporter
# spec:
#   selector:
#     matchLabels:
#       app.kubernetes.io/name: cloudwatch-exporter
#   endpoints:
#   - port: http
#     interval: 60s
#     relabelings:
#       - sourceLabels: [job]
#         separator: ;
#         regex: (.*)
#         targetLabel: scrape_job # need to add this label because dashbords hardcode it
#         replacement: $${1}
#         action: replace

# ---
# apiVersion: external-secrets.io/v1beta1
# kind: ExternalSecret
# metadata:
#   name: cloudwatch-exporter-credentials
#   namespace: ${ARGOCD_ENV_monitoring_namespace}
# spec:
#   refreshInterval: 1m

#   secretStoreRef:
#     kind: ClusterSecretStore
#     name: vault-secret-store
#   data:
#     - secretKey: AWS_ACCESS_KEY_ID
#       remoteRef:
#         key: bootstrap/aws_cloudwatch_credentials # TODO: parametrize it
#         property: AWS_ACCESS_KEY_ID
#         conversionStrategy: Default
#         decodingStrategy: None
#         metadataPolicy: None
#     - secretKey: AWS_SECRET_ACCESS_KEY
#       remoteRef:
#         key: bootstrap/aws_cloudwatch_credentials # # TODO: parametrize it
#         property: AWS_SECRET_ACCESS_KEY
#         conversionStrategy: Default
#         decodingStrategy: None
#         metadataPolicy: None

#   target:
#     name: cloudwatch-exporter-credentials
#     creationPolicy: Owner
#     template:
#       data:
#         credentials: |
#           [default]
#           aws_access_key_id: {{.AWS_ACCESS_KEY_ID}}
#           aws_secret_access_key: {{.AWS_SECRET_ACCESS_KEY}}
